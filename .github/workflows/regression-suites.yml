name: Test Regression Scenarios

on:
  schedule:
    - cron: 11 11 * * * # 12:11AM CET, 3:11PM PT, 6:11PM ET
  pull_request:
    branches:
      - release
  workflow_dispatch:

jobs:
  local-cli-regression:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        interaction-count: [10000]
        rust-diff-engine: [true]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/setup-node@c46424eee26de4078d34105d3de3cc4992202b1e # v2.1.4
        with:
          node-version: 12
      - name: Set Rust env vars
        run: |
          echo "RUSTUP_HOME=$HOME/.rustup" >> $GITHUB_ENV
          echo "CARGO_HOME=$HOME/.cargo" >> $GITHUB_ENV
      - name: Checkout source
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # v2.3.4
      - name: Restore cached node_modules
        id: workspace-node-modules
        uses: actions/cache@26968a09c0ea4f3e233fdddbafd1166051a095f6 # v2.1.4
        with:
          path: node_modules
          key: workspace-node-modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}-v1
      - name: Install test dependencies
        shell: bash
        run: |
          set -x
          set -v
          source sourceme.sh
          optic_build_for_release
      - name: Display yarn error log
        shell: bash
        run: cat yarn-error.log
        if: failure()
      - name: Restore cached cargo registry
        uses: actions/cache@26968a09c0ea4f3e233fdddbafd1166051a095f6 # v2.1.4
        with:
          path: |
            ${{ env.CARGO_HOME }}/registry
            ${{ env.CARGO_HOME }}/git
            target
          key: "${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}-v4"
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1.0.7
        with:
          toolchain: stable
          profile: minimal
          override: true
      # @TODO: build and use the release binary as opposed to the debug binary
      - name: Build
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1.0.3
        with:
          command: build
          args: --workspace --all-features
      - name: Test
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1.0.3
        with:
          command: test
      - name: Flush Cargo cache to disk
        if: runner.os == 'macOS'
        run: sudo /usr/sbin/purge
      - name: Run scenario
        shell: bash
        timeout-minutes: 2
        run: |
          source sourceme.sh
          optic_ci_standard_streams_regression ${{ matrix.interaction-count }} ${{ matrix.rust-diff-engine }}
      - name: Display diff output
        shell: bash
        run: |
          source sourceme.sh
          optic_ci_standard_streams_regression__on_failure
        if: always()
      - run: |
          echo "MESSAGE=${{ matrix.os }}: Regression suites passed." >> $GITHUB_ENV
        shell: bash
        if: success()
      - run: |
          echo "MESSAGE=${{ matrix.os }}: Regression suites failed. https://github.com/opticdev/optic/actions/runs/$GITHUB_RUN_ID" >> $GITHUB_ENV
        shell: bash
        if: failure()
      - name: Report status
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"${{ env.MESSAGE }}"}' ${{ secrets.SLACK_WEBHOOK_URL }}
        shell: bash
        if: always()
